name: Deploy Infrastructure

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Google Cloud
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          version: "latest"
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Terraform Init
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: "1.0.0"
          terraform_wrapper: false

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Plan
        run: terraform plan
        env:
          TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}
          TF_VAR_postgres_password: ${{ secrets.DB_PASSWORD }}
          # Defina outras vari치veis de ambiente necess치rias para o Terraform aqui, como:
          # TF_VAR_postgres_username: ${{ secrets.DB_USER }}

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve
        env:
          TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}
          TF_VAR_postgres_password: ${{ secrets.DB_PASSWORD }}
          # Defina outras vari치veis de ambiente necess치rias para o Terraform aqui, como:
          # TF_VAR_postgres_username: ${{ secrets.DB_USER }}

      - name: Check and Run SQL Script
        run: bash ./scripts/check_and_run_sql.sh $CONNECTION_NAME $POSTGRES_USERNAME $POSTGRES_PASSWORD $INSTANCE_NAME
        env:
          CONNECTION_NAME: ${{ secrets.DB_CONNECTION_NAME }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_USERNAME: ${{ secrets.DB_USER }}
          INSTANCE_NAME: ${{ secrets.DB_INSTANCE_NAME }}
