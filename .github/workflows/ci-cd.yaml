name: Deploy Infrastructure

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Google Cloud
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          version: "latest"
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: "1.0.0"
          terraform_wrapper: false

      - name: Terraform Init
        run: terraform init

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -out=tfplan
          echo "TF_PLAN_EXIT_CODE=$?" >> $GITHUB_ENV
        env:
          TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}
          TF_VAR_postgres_password: ${{ secrets.DB_PASSWORD }}
          TF_VAR_postgres_username: ${{ secrets.DB_USER }}
          # Adicione as vari치veis abaixo se necess치rio
          # TF_VAR_techchallenge_pagamento_db_name: ${{ secrets.PAGAMENTO_DB_NAME }}
          # TF_VAR_techchallenge_producao_db_name: ${{ secrets.PRODUCAO_DB_NAME }}
          # TF_VAR_techchallenge_pedido_db_name: ${{ secrets.PEDIDO_DB_NAME }}

      - name: Terraform Apply
        if: env.TF_PLAN_EXIT_CODE == '2'
        run: terraform apply -auto-approve tfplan
        env:
          TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}
          TF_VAR_postgres_password: ${{ secrets.DB_PASSWORD }}
          TF_VAR_postgres_username: ${{ secrets.DB_USER }}
          # Adicione as vari치veis abaixo se necess치rio
          # TF_VAR_techchallenge_pagamento_db_name: ${{ secrets.PAGAMENTO_DB_NAME }}
          # TF_VAR_techchallenge_producao_db_name: ${{ secrets.PRODUCAO_DB_NAME }}
          # TF_VAR_techchallenge_pedido_db_name: ${{ secrets.PEDIDO_DB_NAME }}

      # - name: Check and Run SQL Script
      #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      #   run: bash ./sql/check_and_run_sql.sh ${{ secrets.DB_CONNECTION_NAME }} ${{ secrets.DB_USER }} ${{ secrets.DB_PASSWORD }} ${{ secrets.DB_NAME }}
      #   env:
      #     CONNECTION_NAME: ${{ secrets.DB_CONNECTION_NAME }}
      #     USER: ${{ secrets.DB_USER }}
      #     PASSWORD: ${{ secrets.DB_PASSWORD }}
      #     DATABASE_NAME: ${{ secrets.DB_NAME }}
